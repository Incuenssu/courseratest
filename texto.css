/*Se puede aplicar estilos a cualquier cosa del html*/
/*Seleccionando secciones*/
    header{
        color: blue;
    }
    body{
        margin: auto;
        width: 1000px;
        border: 3px solid green;
        padding: 5px;
    }
/*Seleccionando el ID*/
    #Encabezado{ /*ID Selector*/
        color: blue;
        font-size: 50px;
        text-align: center;
    }
    #Contenido{ /*ID Selector*/
        width: 800px;
    }
    #BarraLateral{ /*ID Selector*/
        text-align: right;
    }
/*Seleccionando Elementos*/
    h4{ /*Element Selector*/
        color: black;
        font-size: 15px;
    }
/*Seleccionando clases*/
    .TituloArticulos{ /*Class Selector*/
        color: darkslateblue;
        font-size: 20px;
    }
/*Asi podemos elegir dos o mas atributos que modificar a la vez*/
    h3, .TituloArticulos, #Contenido{
        color: yellow;
    }
/*Combinando elementos*/
    /*Esto significa todos los parrafos con la clase big. Recordamos que la clase se      puede aplicar a multitud de cosas: div, p, section,etc*/
    p.big{
        font-size: 20px;
    }
    /*
    <p class="big"></p>
    ...
    <div class="big"></div>*/
    /*Cada parrafo que es hijo DIRECTO de un articulo. 
    Ejemplo2: article > .colored{}
    Ejemplo3: div > div > li{}*/
    article > p{   
        color: blue;         
    }
    /*<article>
    <p>   AFECTADO   </p>
    </article>
    ...
    <article>
    <div><p>   NO AFECTADO   </p></div>
    </article>*/
    /*Cada parrafo hijo de un articulo, directo o indirecto: Ejemplo2: .colored p{}*/
    article p {    
        color: blue;         
    }
    /*<article>
    <div><p>   AFECTADO   </p></div>
    </article>*/
/*Para quitar los break line de las listas*/ /*Ademas aqui elegimos las listas del Header*/
    header li{      
        list-style: none;           /*Quita los puntos o los numeros*/
        display:inline-block;       /*Elimina los Break Line*/
    }
/*Pseudo-Class Selectors
    :link           Link sin visitar
    :visited        Link visitado
    :hover          (Flotar) Poner el cursor encima
    :active         Clica pero no suelta el clic
    :nth-child()    Sirve para enlazar. Lecture15*/
    a:link, a:visited{
        text-decoration: none;
        background-color: green;
        border: 2px solid blue;
        color: black;
        display: block;
        width: 150px;
        text-align: center;
        margin-bottom: 1px;
    }
    a:hover, a:active{
        background-color: red;
        color: purple
    }
    header li:nth-child(2){         /*Elige el segundo li del header*/
        font-size: 20px;
    }
    header li:nth-child(3):hover{   /*Elige el tercer li y que ocurre cuando se pone el cursor encima*/
        font-size: 30px;
    }
/*Conflictos Lecture 17∫*/
    /*Last declaration Wins. HTML is proccessed sequentially, top to bottom.*/
    /*Declarations Merge. Font size and color, when they're targeted to the same element, they will merge to one.*/
    /*DOM tree:
            body                Si especifico un cambio CSS en el body, todos los elementos del body se veran afectados
                element         Si especifico un cambio CSS aqui, solo los que dependen de este se veran afectado
                    element
                    element
                element
                element               
                */
    /*Most specific Selector Combination Wins
        El mas especifico: estilos dentro de un elemento
        Mas especifico: ID
        Menos especifico: Class, pseudo-class, attribute
        El menos especifico: # of elements
        Si los colocamos por puntuacion para verlo mas claro:
            style   ID  class   #   */
                /*Ejemplo 1:  <h2 style="color: green;">          Puntuacion 1 0 0 0*/
                /*Ejemplo 2:*/ div p {color: green;}          /*Puntuacion 0 0 0 2*/
                /*Ejemplo 3:*/ div #myParag {color: green;}   /*Puntuacion 0 1 0 1*/
                /*Ejemplo 4:*/ div.big p {color: green;}      /*Puntuacion 0 0 1 2*/
        /*Si ponemos !important detras de una variable, no importara la especifidad, usara la que le hayamos dicho.*/
            header.navigation p{
                color: green;
            }
            p{
                color: blue !important;              /*Usara el color azul*/
            }
/*Styling text Lecture 18*/
    /*Lo mejor es poner una cantidad variada de fonts por si no existe alguna en el pc. Y hay preferencias:*/
    *{
        font-family: Arial, Helvetica, sans-serif;
    }
    /*Se suele usar hexadecimal para los colores*/
    *{
        color: #0000ff;
    }
    /*Cursiva:*/ 
    *{
        font-style: italic;
    }
    /*Negrita:*/ 
    *{
        font-weight: bold;
    }
    /*Tamaño del texto siempre en pixeles:*/ 
    *{
        font-size: 24px;     /*El default es 16px*/
    }
    /*Esto nos indica que multiplica por 2 el px que tengamos puesto, es lo mismo que poner 200%. En este ejemplo serian 48px*/
    *{
        font-size: 2em;
    }    
    /*Para controlar como se ve el texto usamos: text-transform: ;  Por ejemplo todo en mayusculas o mayusculas la primera letra de cada palabra, etc*/
    *{
        text-transform: capitalize;
    }
    /*Alineacion:*/ 
    *{
        text-align: center;
    }
/*Box Model: Lecture 19*/
    /*Son varias cajas, de externo a interno serian:
        Margin
            margin: 20px 20px 20px 0px; Empezando desde arriba sentido horario
        Border
        Padding
        Content
    Cuidado con hacer el box general mas pequeño que el box de texto, que si escribes debajo se va al pedo*/
        #box{
            height: 50px;
        }
        #content{
            height: 100px;      /*Si escribimos algo debajo de este contenido, se veran los dos textos uno encima de*/       
        }
        /*Para solucionar esto usamos: overflow:*/
        #box{
            height: 50px;
            overflow: visible;      /*Valor por defecto, nos ocurre el problema de arriba*/
            overflow: hidden;       /*Nos oculta el contenido externo al box*/
            overflow: auto;         /*Nos dara un scrollbar. Bueno para Terms of Service.*/
            overflow: scroll;       /*Igual que el auto pero nos dara scrollbar vertical y horizontal siempre*/
        }
    /*Box-sizing: Sirve para establecer limites de la caja.*/
        #box{
            width: 300px;
            margin: 20px;
            border: 10px;
            padding: 5px;
        }
        /*Aqui el largo total es: 300 + 20*2(de cada lado) + 10*2 + 5*2 = 370px de largo total*/
        #box{
            width: 300px;
            margin: 20px;
            border: 10px;
            padding: 5px;
            box-sizing: border-box;             /*Usar siempre esta opcion*/
        }
        /*Aqui nos aseguramos que el tamaño total es de 300px. Ajustandose el interior para que en total sume 300px.
        Si pusiesemos: box-sizing: content-box; Nos aseguramos que el tamaño del contenido sea de 300px, despues habria padding, border y margin. Es el default.*/
    /*Para evitar tener que hacer box-sizing: border-box en cada {} se puede usar el selector universal:*/
        *{
            box-sizing: border-box;
            margin: 0;                  /*Tambien estaria bien establecer todos los margenes y paddings en 0*/
            padding: 0;                 /*porque el browser puede elegirlos como el quiera*/
        }
        body{
            color: blue;
        }
        a:hover, a:active{
            color: green;
        }
    /*Acumular margenes
        Se suman los margenes horizontales:
            -5px-Content-20px- -30px-Content-3px-
            -5px-Content - 50px - Content-3px-
        Los margenes superior e inferior no se suman, el mayor es el que gana:
            Content
            -20px-
            -30px-
            Content
            Content
            -30px-
            Content
    */
/*Background Property: Lecture 20*/
    /*Para añadir una imagen de fondo, tanto URL como local*/
    *{
        background-color: blue;
        background-image: url("photo.jpg");     /*Si la imagen es pequeña para el espacio, por defecto se repetira*/
        background-repeat: no-repeat;           /*Si no queremos que se repita. Solo pone 1.*/
        background-position: bottom right;      /*Primero vertical y luego horizontal. Si solo ponemos uno el otro centrado*/
        background: blue url("photo.jpg") no-repeat bottom right;       /*Todo junto*/
    }
/*Positioning elements by floating: Lecture 21*/
    /*Usamos la propiedad float*/
    #Navegacion{
        float: right;
    }
    /*Hay que tener cuidado porque lo de debajo colapsa, por lo que debajo hay que decirle que deje de float*/
    #Contenido{
        clear: right;           /*Right, Left, Both*/
    }
    /*Para hacer por ejemplo una galeria:*/
    p{
        float: left;
    }
    #p1{
        width: 300px;
        height: 300px;
    }
    #p2{
        width: 300px;
        height: 300px;
    }
    #p3{
        width: 300px;
        height: 300px;
        clear: left;            /*Con esto hacemos que deje de flotar la tercera imagen*/
    }
    #p4{                        /*Vuelve a flotar y tenemos un 2x2 en forma de galeria*/
        width: 300px;
        height: 300px;
    }
/*Relative and Absolute Element Position: Lecture 22*/
    /*Static Position: Normal document Flow. Default for all, except html.Position offsets are ignored*/
    /*Relative Position: Element is positioned relative to its position in normal document flow. Solo se mueve el relative, los demas elementos no se mueven, dejan el hueco del relative.*/
    *{
        position: relative;
        top: 15px; left: 15px;          /*bottom: 15px; right: 15px;*/
    }
        /*Positioning CSS (Offset) propierties are: top, bottom, left, right
        Element is NOT taken out of normal document flow. Even if moved, its original spot is preserved.
        Esto quiere decir que no toma los 15px desde las esquinas de la hoja si no desde su posicion en el HTML.
            Un parrafo a 400px de la esquina superior y a 20px de la izquierda, ocupara la posicion 415px y 35px*/
        /*Si tomamos valores positivos tomamos la esquina superior izquierda y con negativos tomamos la esquina inferior derecha como puntos de referencia del movimiento*/
    /*Absolute position: all offsets are relative to the position of the nearest ancestor which has positioning set on it, other than static. Se acomodan todos los elementos por su movimiento, esta "flotando sobre ellos"*/
    *{
        position: absolute;
        top: 15; left: 15px;          /*bottom: 15px; right: 15px;*/
    }
        /*Estas coordenadas si tienen en cuenta las esquinas de nuestra web, no de su posicion inicial*/
        /*By default, html is the only element that has non-static positioning set on it(relative).
        Element is taken out of normal document flow*/
/*Media Queries: Lecture 23*/
    /*Sirve para utilizar una estructura de monitor, de movil o de tablet*/
    /*El inspector de Chrome tiene opciones para verlo como si fuese un movil y asi obtenemos los limites*/
    /*Empieza con @media(){}*/
    @media (max-width: 767px){      /*Dentro del parentesis es un Media Feature que se resuelve como true o false*/
        p{                          /*If True, resuelve la llave*/
            color: blue;
        }
    }
    /*Los mas usados son:
        @media (max-width: 800px) {}
        @media (min-width: 800px) {}
        @media (orientation: portrait) {}
        @media screen {}
        @media print {}*/
    /*Se pueden combinar:
        @media (max-width: 991px) and (min-width: 768px) {}         Es un AND
        @media (min-width: 992px) and (max-width: 767px) {}         Es un OR
        */
    /*Como podemos tener varias clases al mismo tiempo podemos elegir un tema para moviles, otro para pc y otro para tablets:
        @media (max-width: 450px){.classphone{p{width:20px;}}}
        @media (min-width: 451px) and (max-width: 768px){.classtablet{p{width:30px;}}}
        @media (min-width: 769px){.classpc{p{width:50px;}}}
        <div class="classpc classphone classtablet"><p>Item 1</p></div>*/
/*Responsive Design: Lecture 24*/
    /*Is a site designed to adapt its layout to the viewing environment by using fluid, proportion-based grids, flexible images, and CSS3 media queries*/
        /*Site's layout adapts to the size of the device.
        Content verbosity(words) or its visual delivery may change.*/
    /*Alternative to responsive design:
        Use diferent site servers: www.mysite.com or m.mysite.com
        Esto tiene riesgos porque al ser dos paginas distintas pueden estar en versiones distintas
        Hay mucha variedad de dispositivos y no es facil saber si va a la web completa o a la version movil*/
    /*12-Column Grid Responsive Layout
        Se basa en dividir el largo en porciones de 12 e ir ocupandolas de forma ordenada.
        Por ejemplo:
        Titulo de arriba ocupa las 12 casillas.
        Menu: debajo del titulo ocupa 3 casillas
        Contenido: a la derecha del menu ocupa 6 casillas
        Bibliografia del contenido: a la derecha del contenido ocupa otras 3 casillas
        Footer: Abajo del todo ocupa 12 casillas.*/
    /*Para que en moviles se vea bien habria que poner en meta:
        <meta name="viewport" conten="width=device-width, initial-sacle=1">*/
        /*Tells the browser to consider the width of the device as the real width of the screen and set its zoom level to 1, i.e., 100%, so it's not zoomed in or zoomed out.*/
/*Twitter Bootstrap: Lecture 25*/                           /*Igual habria que revisar este framework*/
    /*Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.*/
    /*Desventajas:
        Too big, too bloated(hinchada).
            A lot of features you will probably never use(Selective download).
            You can write your own, that's more targeted/smaller(you take a LOT longer).*/
    /*Download: www.getbootstrap.com
        Hay 3 folders: CSS, fonts, js*/     /*Dos en 2021: CSS, js*/
    /*Necesita JQuery*/
    /*El siguiente tag:
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        Bootstrap recomienda ponerlo*/
    /*Es bueno si hay que crear un sitio web muuuy rapido*/
    /*En principio es muy bueno, hay que aprenderlo*/
/*Bootstrap Grid System Basics*/
    /*Mucho texto, revisar mas adelante como funciona Bootstrap.*/
    /*<div class ="container">                      Must be inside container (or container-fluid)
        <div class ="row">                          Creates horizontal groups of columns. Applies negative left/right margins. Es negativo por la propia forma del framework. Esto se ve mejor usandolo.
            <div class ="col-md-4">Col 1</div>      "col-SIZE-SPAN" col=column, SIZE=MD LG, SPAN=Numero de las 12 columnas que usaras
            ...
        </div>
    </div>
    Lo que hace el Framework es establecer por si solo una serie de filas y columnas donde se acomodará el sitio web*/
    /*Bastante intuitivo. En mi ejemplo quedaria asi:
        <div class="container-fluid">
        <div class="row">
            <div class="col-md-10 col-sm-9 col-xs-8">Contenido</div>
            <div class="col-md-2 col-sm-3 col-xs-4">Barra Lateral</div>
        </div>
        Con esto conseguimos rapidamente que en pc el contenido ocupe 10/12 y la barra 2/12, cuando cambiamos a tablet ocupa 9/12 y 3/12 para que se vea bien, y cuando estamos en movil para que no se vea diminuto el contenido ocupa 8/12 y la barra lateral 4/12*/


        